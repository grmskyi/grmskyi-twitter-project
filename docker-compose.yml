services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - data:/data

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://localhost:27017/
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH: false
  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=sa
      - RABBITMQ_DEFAULT_VHOST=vhost
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}]
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 30s
      timeout: 10s
      retries: 5
  user-auth-service:
    build:
      context: ./user-auth-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/user_auth_db
    depends_on:
      - rabbitmq
      - mongodb
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/user_data_db
    depends_on:
      - rabbitmq
      - mongodb
volumes:
  data: { }